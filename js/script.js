"use strict"
// --- Розписати покроково, що робить програма:
/* 
const numbers = [5, 8, -1, "-6", 11, "ololo", "-2"]
let sum = 0
for (let i = 0; i < numbers.length; i++) {
    sum += numbers[i]
}

alert("Sum is " + sum)

------------------------------------------------------------------------------------------------------------------------------------

1. оголосили numbers
2. присвоїти numbers масив з 7 елементів 5, 8, -1, '-6', 11, 'ololo', '-2': numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
3. оголосли sum
4. присвоїли sum 0: sum=0
5. цикл for
6. оголосили i
7. присвоїли i 0: i = 0
8. перевіряємо чи i менше довжини масива numbers: 0 < 7 так
9. присвоїти sum значення 0 елементу масива доданого до початкового значення sum = 0: sum = 0 + 5
10. збільшити i на одиницю: i = 1
11. перевірити, чи i менше довжини масиву: 1 < 7 - так
12. присвоїти sum значення 1 елементу масива доданого до значення sum = 5: sum = 5 + 8
13. збільшити i на одиницю: i = 2
14. перевірити, чи i менше довжини масиву: 2 < 7 - так
15. присвоїти sum значення 2 елементу масива доданого до значення sum = 13: sum = 13 + (-1)
16. збільшити i на одиницю: i = 3
17. перевірити, чи i менше довжини масиву: 3 < 7 - так
18. присвоїти sum значення 3 елементу масива доданого до значення sum = 12: sum = 12 + '-6' 
19. значення 3 елементу '-6' радок, відбулося перетворення типу на рядковий та додавання (об’єднання) рядків: sum = '12-6'
20. збільшити i на одиницю: i = 4
21. перевірити, чи i менше довжини масиву: 4 < 7 - так
22. присвоїти sum значення 4 елементу масива доданого до значення sum ='12-6': sum = '12-6' + 11
23. значення 4 елементу 11 число, sum у нас рядок відбулося перетворення типу та додавання (об’єднання) рядків: sum = '12-611'
24. збільшити i на одиницю: i = 5
25. перевірити, чи i менше довжини масиву: 5 < 7 - так
26. присвоїти sum значення 5 елементу масива доданого до значення sum = '12-611': sum = '12-611' + 'ololo'
27. значення 5 елементу 'ololo' рядок, sum у нас рядок відбулося додавання (об’єднання) рядків: sum = '12-611ololo'
28. збільшити i на одиницю: i = 6
29. перевірити, чи i менше довжини масиву: 6 < 7 - так
30. присвоїти sum значення 6 елементу масива доданого до значення sum = '12-611ololo' : sum = '12-611ololo' + '-2'
31. значення 6 елементу '-2' рядок, sum у нас рядок відбулося додавання (об’єднання) рядків: sum = '12-611ololo-2'
32. збільшити i на одиницю: i = 7
33. перевірити, чи i менше довжини масиву: 7 < 7 - ні
34. вивести повідомлення Sum is 12-611ololo-2
*/

// --- на якій ітерації програма перестала коректно рахувати суму чисел (чому дорівнює i)?
// --- i = 3

// --- пофіксити баг, не змінюючи сам масив. тобто виправити баг таким чином, щоб сума рахувалася правильно і видавало 15

const numbers = [5, 8, -1, "-6", 11, "ololo", "-2"]
let sum = 0
for (let i = 0; i < numbers.length; i++) {
    if (!Number.isNaN(parseInt(numbers[i]))) {
        sum += parseInt(numbers[i])
    }
}
alert("Sum is " + sum)
